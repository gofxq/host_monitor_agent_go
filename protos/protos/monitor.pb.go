// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: protos/monitor.proto

package pb_model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SystemMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname      string         `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Timestamp     int64          `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CpuUsage      *CPUUsage      `protobuf:"bytes,3,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage   *MemoryUsage   `protobuf:"bytes,4,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	DiskUsage     *DiskUsage     `protobuf:"bytes,5,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	NetworkUsage  *NetworkUsage  `protobuf:"bytes,6,opt,name=network_usage,json=networkUsage,proto3" json:"network_usage,omitempty"`
	SystemLoad    *SystemLoad    `protobuf:"bytes,7,opt,name=system_load,json=systemLoad,proto3" json:"system_load,omitempty"`
	ProcessCount  *ProcessCount  `protobuf:"bytes,8,opt,name=process_count,json=processCount,proto3" json:"process_count,omitempty"`
	LoginSessions *LoginSessions `protobuf:"bytes,9,opt,name=login_sessions,json=loginSessions,proto3" json:"login_sessions,omitempty"`
	SystemInfo    *SystemInfo    `protobuf:"bytes,10,opt,name=system_info,json=systemInfo,proto3" json:"system_info,omitempty"`
}

func (x *SystemMetrics) Reset() {
	*x = SystemMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMetrics) ProtoMessage() {}

func (x *SystemMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMetrics.ProtoReflect.Descriptor instead.
func (*SystemMetrics) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *SystemMetrics) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SystemMetrics) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SystemMetrics) GetCpuUsage() *CPUUsage {
	if x != nil {
		return x.CpuUsage
	}
	return nil
}

func (x *SystemMetrics) GetMemoryUsage() *MemoryUsage {
	if x != nil {
		return x.MemoryUsage
	}
	return nil
}

func (x *SystemMetrics) GetDiskUsage() *DiskUsage {
	if x != nil {
		return x.DiskUsage
	}
	return nil
}

func (x *SystemMetrics) GetNetworkUsage() *NetworkUsage {
	if x != nil {
		return x.NetworkUsage
	}
	return nil
}

func (x *SystemMetrics) GetSystemLoad() *SystemLoad {
	if x != nil {
		return x.SystemLoad
	}
	return nil
}

func (x *SystemMetrics) GetProcessCount() *ProcessCount {
	if x != nil {
		return x.ProcessCount
	}
	return nil
}

func (x *SystemMetrics) GetLoginSessions() *LoginSessions {
	if x != nil {
		return x.LoginSessions
	}
	return nil
}

func (x *SystemMetrics) GetSystemInfo() *SystemInfo {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

type CPUUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemCpuLoad     float64 `protobuf:"fixed64,1,opt,name=system_cpu_load,json=systemCpuLoad,proto3" json:"system_cpu_load,omitempty"`
	ProcessCpuLoad    float64 `protobuf:"fixed64,2,opt,name=process_cpu_load,json=processCpuLoad,proto3" json:"process_cpu_load,omitempty"`
	NumberOfCores     int32   `protobuf:"varint,3,opt,name=number_of_cores,json=numberOfCores,proto3" json:"number_of_cores,omitempty"`
	LoadAverage_1Min  float64 `protobuf:"fixed64,4,opt,name=load_average_1min,json=loadAverage1min,proto3" json:"load_average_1min,omitempty"`
	LoadAverage_5Min  float64 `protobuf:"fixed64,5,opt,name=load_average_5min,json=loadAverage5min,proto3" json:"load_average_5min,omitempty"`
	LoadAverage_15Min float64 `protobuf:"fixed64,6,opt,name=load_average_15min,json=loadAverage15min,proto3" json:"load_average_15min,omitempty"`
}

func (x *CPUUsage) Reset() {
	*x = CPUUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUUsage) ProtoMessage() {}

func (x *CPUUsage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUUsage.ProtoReflect.Descriptor instead.
func (*CPUUsage) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *CPUUsage) GetSystemCpuLoad() float64 {
	if x != nil {
		return x.SystemCpuLoad
	}
	return 0
}

func (x *CPUUsage) GetProcessCpuLoad() float64 {
	if x != nil {
		return x.ProcessCpuLoad
	}
	return 0
}

func (x *CPUUsage) GetNumberOfCores() int32 {
	if x != nil {
		return x.NumberOfCores
	}
	return 0
}

func (x *CPUUsage) GetLoadAverage_1Min() float64 {
	if x != nil {
		return x.LoadAverage_1Min
	}
	return 0
}

func (x *CPUUsage) GetLoadAverage_5Min() float64 {
	if x != nil {
		return x.LoadAverage_5Min
	}
	return 0
}

func (x *CPUUsage) GetLoadAverage_15Min() float64 {
	if x != nil {
		return x.LoadAverage_15Min
	}
	return 0
}

type MemoryUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalPhysicalMemory uint64 `protobuf:"varint,1,opt,name=total_physical_memory,json=totalPhysicalMemory,proto3" json:"total_physical_memory,omitempty"`
	FreePhysicalMemory  uint64 `protobuf:"varint,2,opt,name=free_physical_memory,json=freePhysicalMemory,proto3" json:"free_physical_memory,omitempty"`
	TotalVirtualMemory  uint64 `protobuf:"varint,3,opt,name=total_virtual_memory,json=totalVirtualMemory,proto3" json:"total_virtual_memory,omitempty"`
	FreeVirtualMemory   uint64 `protobuf:"varint,4,opt,name=free_virtual_memory,json=freeVirtualMemory,proto3" json:"free_virtual_memory,omitempty"`
	TotalSwapSpace      uint64 `protobuf:"varint,5,opt,name=total_swap_space,json=totalSwapSpace,proto3" json:"total_swap_space,omitempty"`
	FreeSwapSpace       uint64 `protobuf:"varint,6,opt,name=free_swap_space,json=freeSwapSpace,proto3" json:"free_swap_space,omitempty"`
	CachedMemory        uint64 `protobuf:"varint,7,opt,name=cached_memory,json=cachedMemory,proto3" json:"cached_memory,omitempty"`
	BufferMemory        uint64 `protobuf:"varint,8,opt,name=buffer_memory,json=bufferMemory,proto3" json:"buffer_memory,omitempty"`
}

func (x *MemoryUsage) Reset() {
	*x = MemoryUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUsage) ProtoMessage() {}

func (x *MemoryUsage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryUsage.ProtoReflect.Descriptor instead.
func (*MemoryUsage) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *MemoryUsage) GetTotalPhysicalMemory() uint64 {
	if x != nil {
		return x.TotalPhysicalMemory
	}
	return 0
}

func (x *MemoryUsage) GetFreePhysicalMemory() uint64 {
	if x != nil {
		return x.FreePhysicalMemory
	}
	return 0
}

func (x *MemoryUsage) GetTotalVirtualMemory() uint64 {
	if x != nil {
		return x.TotalVirtualMemory
	}
	return 0
}

func (x *MemoryUsage) GetFreeVirtualMemory() uint64 {
	if x != nil {
		return x.FreeVirtualMemory
	}
	return 0
}

func (x *MemoryUsage) GetTotalSwapSpace() uint64 {
	if x != nil {
		return x.TotalSwapSpace
	}
	return 0
}

func (x *MemoryUsage) GetFreeSwapSpace() uint64 {
	if x != nil {
		return x.FreeSwapSpace
	}
	return 0
}

func (x *MemoryUsage) GetCachedMemory() uint64 {
	if x != nil {
		return x.CachedMemory
	}
	return 0
}

func (x *MemoryUsage) GetBufferMemory() uint64 {
	if x != nil {
		return x.BufferMemory
	}
	return 0
}

type DiskUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disk []*DiskUsage_Disk `protobuf:"bytes,1,rep,name=disk,proto3" json:"disk,omitempty"`
}

func (x *DiskUsage) Reset() {
	*x = DiskUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskUsage) ProtoMessage() {}

func (x *DiskUsage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskUsage.ProtoReflect.Descriptor instead.
func (*DiskUsage) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *DiskUsage) GetDisk() []*DiskUsage_Disk {
	if x != nil {
		return x.Disk
	}
	return nil
}

type NetworkUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network []*NetworkUsage_Network `protobuf:"bytes,1,rep,name=network,proto3" json:"network,omitempty"`
}

func (x *NetworkUsage) Reset() {
	*x = NetworkUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkUsage) ProtoMessage() {}

func (x *NetworkUsage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkUsage.ProtoReflect.Descriptor instead.
func (*NetworkUsage) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{4}
}

func (x *NetworkUsage) GetNetwork() []*NetworkUsage_Network {
	if x != nil {
		return x.Network
	}
	return nil
}

type SystemLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Load_1Min  float64 `protobuf:"fixed64,1,opt,name=load_1min,json=load1min,proto3" json:"load_1min,omitempty"`
	Load_5Min  float64 `protobuf:"fixed64,2,opt,name=load_5min,json=load5min,proto3" json:"load_5min,omitempty"`
	Load_15Min float64 `protobuf:"fixed64,3,opt,name=load_15min,json=load15min,proto3" json:"load_15min,omitempty"`
}

func (x *SystemLoad) Reset() {
	*x = SystemLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemLoad) ProtoMessage() {}

func (x *SystemLoad) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemLoad.ProtoReflect.Descriptor instead.
func (*SystemLoad) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{5}
}

func (x *SystemLoad) GetLoad_1Min() float64 {
	if x != nil {
		return x.Load_1Min
	}
	return 0
}

func (x *SystemLoad) GetLoad_5Min() float64 {
	if x != nil {
		return x.Load_5Min
	}
	return 0
}

func (x *SystemLoad) GetLoad_15Min() float64 {
	if x != nil {
		return x.Load_15Min
	}
	return 0
}

type ProcessCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalProcesses    int32 `protobuf:"varint,1,opt,name=total_processes,json=totalProcesses,proto3" json:"total_processes,omitempty"`
	RunningProcesses  int32 `protobuf:"varint,2,opt,name=running_processes,json=runningProcesses,proto3" json:"running_processes,omitempty"`
	SleepingProcesses int32 `protobuf:"varint,3,opt,name=sleeping_processes,json=sleepingProcesses,proto3" json:"sleeping_processes,omitempty"`
	ZombieProcesses   int32 `protobuf:"varint,4,opt,name=zombie_processes,json=zombieProcesses,proto3" json:"zombie_processes,omitempty"`
}

func (x *ProcessCount) Reset() {
	*x = ProcessCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessCount) ProtoMessage() {}

func (x *ProcessCount) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessCount.ProtoReflect.Descriptor instead.
func (*ProcessCount) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{6}
}

func (x *ProcessCount) GetTotalProcesses() int32 {
	if x != nil {
		return x.TotalProcesses
	}
	return 0
}

func (x *ProcessCount) GetRunningProcesses() int32 {
	if x != nil {
		return x.RunningProcesses
	}
	return 0
}

func (x *ProcessCount) GetSleepingProcesses() int32 {
	if x != nil {
		return x.SleepingProcesses
	}
	return 0
}

func (x *ProcessCount) GetZombieProcesses() int32 {
	if x != nil {
		return x.ZombieProcesses
	}
	return 0
}

type LoginSessions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveSessions int32                    `protobuf:"varint,1,opt,name=active_sessions,json=activeSessions,proto3" json:"active_sessions,omitempty"`
	Sessions       []*LoginSessions_Session `protobuf:"bytes,2,rep,name=sessions,proto3" json:"sessions,omitempty"`
}

func (x *LoginSessions) Reset() {
	*x = LoginSessions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginSessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginSessions) ProtoMessage() {}

func (x *LoginSessions) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginSessions.ProtoReflect.Descriptor instead.
func (*LoginSessions) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{7}
}

func (x *LoginSessions) GetActiveSessions() int32 {
	if x != nil {
		return x.ActiveSessions
	}
	return 0
}

func (x *LoginSessions) GetSessions() []*LoginSessions_Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type SystemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsName        string `protobuf:"bytes,1,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`
	OsVersion     string `protobuf:"bytes,2,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	KernelVersion string `protobuf:"bytes,3,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	Architecture  string `protobuf:"bytes,4,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Timezone      string `protobuf:"bytes,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{8}
}

func (x *SystemInfo) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *SystemInfo) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *SystemInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *SystemInfo) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *SystemInfo) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type DiskUsage_Disk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskName    string `protobuf:"bytes,1,opt,name=disk_name,json=diskName,proto3" json:"disk_name,omitempty"`
	TotalSpace  uint64 `protobuf:"varint,2,opt,name=total_space,json=totalSpace,proto3" json:"total_space,omitempty"`
	FreeSpace   uint64 `protobuf:"varint,3,opt,name=free_space,json=freeSpace,proto3" json:"free_space,omitempty"`
	UsableSpace uint64 `protobuf:"varint,4,opt,name=usable_space,json=usableSpace,proto3" json:"usable_space,omitempty"`
	ReadBytes   uint64 `protobuf:"varint,5,opt,name=read_bytes,json=readBytes,proto3" json:"read_bytes,omitempty"`
	WriteBytes  uint64 `protobuf:"varint,6,opt,name=write_bytes,json=writeBytes,proto3" json:"write_bytes,omitempty"`
	ReadCount   uint64 `protobuf:"varint,7,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`
	WriteCount  uint64 `protobuf:"varint,8,opt,name=write_count,json=writeCount,proto3" json:"write_count,omitempty"`
}

func (x *DiskUsage_Disk) Reset() {
	*x = DiskUsage_Disk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskUsage_Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskUsage_Disk) ProtoMessage() {}

func (x *DiskUsage_Disk) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskUsage_Disk.ProtoReflect.Descriptor instead.
func (*DiskUsage_Disk) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{3, 0}
}

func (x *DiskUsage_Disk) GetDiskName() string {
	if x != nil {
		return x.DiskName
	}
	return ""
}

func (x *DiskUsage_Disk) GetTotalSpace() uint64 {
	if x != nil {
		return x.TotalSpace
	}
	return 0
}

func (x *DiskUsage_Disk) GetFreeSpace() uint64 {
	if x != nil {
		return x.FreeSpace
	}
	return 0
}

func (x *DiskUsage_Disk) GetUsableSpace() uint64 {
	if x != nil {
		return x.UsableSpace
	}
	return 0
}

func (x *DiskUsage_Disk) GetReadBytes() uint64 {
	if x != nil {
		return x.ReadBytes
	}
	return 0
}

func (x *DiskUsage_Disk) GetWriteBytes() uint64 {
	if x != nil {
		return x.WriteBytes
	}
	return 0
}

func (x *DiskUsage_Disk) GetReadCount() uint64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *DiskUsage_Disk) GetWriteCount() uint64 {
	if x != nil {
		return x.WriteCount
	}
	return 0
}

type NetworkUsage_Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceName        string `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	TotalBytesSent       uint64 `protobuf:"varint,2,opt,name=total_bytes_sent,json=totalBytesSent,proto3" json:"total_bytes_sent,omitempty"`
	TotalBytesReceived   uint64 `protobuf:"varint,3,opt,name=total_bytes_received,json=totalBytesReceived,proto3" json:"total_bytes_received,omitempty"`
	TotalPacketsSent     uint64 `protobuf:"varint,4,opt,name=total_packets_sent,json=totalPacketsSent,proto3" json:"total_packets_sent,omitempty"`
	TotalPacketsReceived uint64 `protobuf:"varint,5,opt,name=total_packets_received,json=totalPacketsReceived,proto3" json:"total_packets_received,omitempty"`
}

func (x *NetworkUsage_Network) Reset() {
	*x = NetworkUsage_Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkUsage_Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkUsage_Network) ProtoMessage() {}

func (x *NetworkUsage_Network) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkUsage_Network.ProtoReflect.Descriptor instead.
func (*NetworkUsage_Network) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{4, 0}
}

func (x *NetworkUsage_Network) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *NetworkUsage_Network) GetTotalBytesSent() uint64 {
	if x != nil {
		return x.TotalBytesSent
	}
	return 0
}

func (x *NetworkUsage_Network) GetTotalBytesReceived() uint64 {
	if x != nil {
		return x.TotalBytesReceived
	}
	return 0
}

func (x *NetworkUsage_Network) GetTotalPacketsSent() uint64 {
	if x != nil {
		return x.TotalPacketsSent
	}
	return 0
}

func (x *NetworkUsage_Network) GetTotalPacketsReceived() uint64 {
	if x != nil {
		return x.TotalPacketsReceived
	}
	return 0
}

type LoginSessions_Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Tty  string `protobuf:"bytes,2,opt,name=tty,proto3" json:"tty,omitempty"`
	Host string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *LoginSessions_Session) Reset() {
	*x = LoginSessions_Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginSessions_Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginSessions_Session) ProtoMessage() {}

func (x *LoginSessions_Session) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginSessions_Session.ProtoReflect.Descriptor instead.
func (*LoginSessions_Session) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{7, 0}
}

func (x *LoginSessions_Session) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *LoginSessions_Session) GetTty() string {
	if x != nil {
		return x.Tty
	}
	return ""
}

func (x *LoginSessions_Session) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

var File_protos_monitor_proto protoreflect.FileDescriptor

var file_protos_monitor_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x80,
	0x04, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x70,
	0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x50, 0x55, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x30, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44,
	0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33,
	0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c,
	0x6f, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c,
	0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x0b,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x8a, 0x02, 0x0a, 0x08, 0x43, 0x50, 0x55, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43,
	0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x31, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x31, 0x6d, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x35, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x35, 0x6d, 0x69, 0x6e,
	0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x31, 0x35, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x6c, 0x6f,
	0x61, 0x64, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x31, 0x35, 0x6d, 0x69, 0x6e, 0x22, 0xf1,
	0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x68, 0x79, 0x73, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x12, 0x66, 0x72, 0x65, 0x65, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x11, 0x66, 0x72, 0x65, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x77, 0x61, 0x70, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x77, 0x61, 0x70, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x65, 0x53,
	0x77, 0x61, 0x70, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x22, 0xc0, 0x02, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2a, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x1a, 0x86, 0x02, 0x0a,
	0x04, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9, 0x02, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x1a, 0xf0,
	0x01, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x22, 0x65, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x61, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x31, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x6d, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x35, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x6f, 0x61, 0x64, 0x35, 0x6d, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x31, 0x35, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c,
	0x6f, 0x61, 0x64, 0x31, 0x35, 0x6d, 0x69, 0x6e, 0x22, 0xbe, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x2d, 0x0a, 0x12, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x6c, 0x65,
	0x65, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x7a, 0x6f, 0x6d, 0x62, 0x69, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x7a, 0x6f, 0x6d, 0x62, 0x69, 0x65,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x0d, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x43, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x22, 0xab, 0x01, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74,
	0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x62, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_monitor_proto_rawDescOnce sync.Once
	file_protos_monitor_proto_rawDescData = file_protos_monitor_proto_rawDesc
)

func file_protos_monitor_proto_rawDescGZIP() []byte {
	file_protos_monitor_proto_rawDescOnce.Do(func() {
		file_protos_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_monitor_proto_rawDescData)
	})
	return file_protos_monitor_proto_rawDescData
}

var file_protos_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_protos_monitor_proto_goTypes = []interface{}{
	(*SystemMetrics)(nil),         // 0: protos.SystemMetrics
	(*CPUUsage)(nil),              // 1: protos.CPUUsage
	(*MemoryUsage)(nil),           // 2: protos.MemoryUsage
	(*DiskUsage)(nil),             // 3: protos.DiskUsage
	(*NetworkUsage)(nil),          // 4: protos.NetworkUsage
	(*SystemLoad)(nil),            // 5: protos.SystemLoad
	(*ProcessCount)(nil),          // 6: protos.ProcessCount
	(*LoginSessions)(nil),         // 7: protos.LoginSessions
	(*SystemInfo)(nil),            // 8: protos.SystemInfo
	(*DiskUsage_Disk)(nil),        // 9: protos.DiskUsage.Disk
	(*NetworkUsage_Network)(nil),  // 10: protos.NetworkUsage.Network
	(*LoginSessions_Session)(nil), // 11: protos.LoginSessions.Session
}
var file_protos_monitor_proto_depIdxs = []int32{
	1,  // 0: protos.SystemMetrics.cpu_usage:type_name -> protos.CPUUsage
	2,  // 1: protos.SystemMetrics.memory_usage:type_name -> protos.MemoryUsage
	3,  // 2: protos.SystemMetrics.disk_usage:type_name -> protos.DiskUsage
	4,  // 3: protos.SystemMetrics.network_usage:type_name -> protos.NetworkUsage
	5,  // 4: protos.SystemMetrics.system_load:type_name -> protos.SystemLoad
	6,  // 5: protos.SystemMetrics.process_count:type_name -> protos.ProcessCount
	7,  // 6: protos.SystemMetrics.login_sessions:type_name -> protos.LoginSessions
	8,  // 7: protos.SystemMetrics.system_info:type_name -> protos.SystemInfo
	9,  // 8: protos.DiskUsage.disk:type_name -> protos.DiskUsage.Disk
	10, // 9: protos.NetworkUsage.network:type_name -> protos.NetworkUsage.Network
	11, // 10: protos.LoginSessions.sessions:type_name -> protos.LoginSessions.Session
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_protos_monitor_proto_init() }
func file_protos_monitor_proto_init() {
	if File_protos_monitor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_monitor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_monitor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_monitor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_monitor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_monitor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_monitor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_monitor_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_monitor_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginSessions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_monitor_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_monitor_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskUsage_Disk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_monitor_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkUsage_Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_monitor_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginSessions_Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_monitor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_monitor_proto_goTypes,
		DependencyIndexes: file_protos_monitor_proto_depIdxs,
		MessageInfos:      file_protos_monitor_proto_msgTypes,
	}.Build()
	File_protos_monitor_proto = out.File
	file_protos_monitor_proto_rawDesc = nil
	file_protos_monitor_proto_goTypes = nil
	file_protos_monitor_proto_depIdxs = nil
}
