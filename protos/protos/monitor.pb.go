// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: protos/monitor.proto

package pb_model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MonitorTick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId             string  `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"` // Host ID of the system
	Timestamp          int64   `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CpuLoad            float64 `protobuf:"fixed64,10,opt,name=cpu_load,json=cpuLoad,proto3" json:"cpu_load,omitempty"`
	CpuLoadSystem      float64 `protobuf:"fixed64,11,opt,name=cpu_load_system,json=cpuLoadSystem,proto3" json:"cpu_load_system,omitempty"`
	CpuLoadUser        float64 `protobuf:"fixed64,12,opt,name=cpu_load_user,json=cpuLoadUser,proto3" json:"cpu_load_user,omitempty"`
	MemUsed            uint64  `protobuf:"varint,21,opt,name=mem_used,json=memUsed,proto3" json:"mem_used,omitempty"`
	SwapUsed           uint64  `protobuf:"varint,25,opt,name=swap_used,json=swapUsed,proto3" json:"swap_used,omitempty"`
	NetSpeedSnt        uint64  `protobuf:"varint,30,opt,name=net_speed_snt,json=netSpeedSnt,proto3" json:"net_speed_snt,omitempty"`
	NetSpeedRcv        uint64  `protobuf:"varint,31,opt,name=net_speed_rcv,json=netSpeedRcv,proto3" json:"net_speed_rcv,omitempty"`
	NetTotalSnt        uint64  `protobuf:"varint,32,opt,name=net_total_snt,json=netTotalSnt,proto3" json:"net_total_snt,omitempty"`
	NetTotalRcv        uint64  `protobuf:"varint,33,opt,name=net_total_rcv,json=netTotalRcv,proto3" json:"net_total_rcv,omitempty"`
	NetTotalPacketsSnt uint64  `protobuf:"varint,34,opt,name=net_total_packets_snt,json=netTotalPacketsSnt,proto3" json:"net_total_packets_snt,omitempty"`
	NetTotalPacketsRcv uint64  `protobuf:"varint,35,opt,name=net_total_packets_rcv,json=netTotalPacketsRcv,proto3" json:"net_total_packets_rcv,omitempty"`
	Load1              float64 `protobuf:"fixed64,41,opt,name=load1,proto3" json:"load1,omitempty"`
	Load5              float64 `protobuf:"fixed64,42,opt,name=load5,proto3" json:"load5,omitempty"`
	Load15             float64 `protobuf:"fixed64,43,opt,name=load15,proto3" json:"load15,omitempty"`
}

func (x *MonitorTick) Reset() {
	*x = MonitorTick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_monitor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorTick) ProtoMessage() {}

func (x *MonitorTick) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorTick.ProtoReflect.Descriptor instead.
func (*MonitorTick) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *MonitorTick) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *MonitorTick) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MonitorTick) GetCpuLoad() float64 {
	if x != nil {
		return x.CpuLoad
	}
	return 0
}

func (x *MonitorTick) GetCpuLoadSystem() float64 {
	if x != nil {
		return x.CpuLoadSystem
	}
	return 0
}

func (x *MonitorTick) GetCpuLoadUser() float64 {
	if x != nil {
		return x.CpuLoadUser
	}
	return 0
}

func (x *MonitorTick) GetMemUsed() uint64 {
	if x != nil {
		return x.MemUsed
	}
	return 0
}

func (x *MonitorTick) GetSwapUsed() uint64 {
	if x != nil {
		return x.SwapUsed
	}
	return 0
}

func (x *MonitorTick) GetNetSpeedSnt() uint64 {
	if x != nil {
		return x.NetSpeedSnt
	}
	return 0
}

func (x *MonitorTick) GetNetSpeedRcv() uint64 {
	if x != nil {
		return x.NetSpeedRcv
	}
	return 0
}

func (x *MonitorTick) GetNetTotalSnt() uint64 {
	if x != nil {
		return x.NetTotalSnt
	}
	return 0
}

func (x *MonitorTick) GetNetTotalRcv() uint64 {
	if x != nil {
		return x.NetTotalRcv
	}
	return 0
}

func (x *MonitorTick) GetNetTotalPacketsSnt() uint64 {
	if x != nil {
		return x.NetTotalPacketsSnt
	}
	return 0
}

func (x *MonitorTick) GetNetTotalPacketsRcv() uint64 {
	if x != nil {
		return x.NetTotalPacketsRcv
	}
	return 0
}

func (x *MonitorTick) GetLoad1() float64 {
	if x != nil {
		return x.Load1
	}
	return 0
}

func (x *MonitorTick) GetLoad5() float64 {
	if x != nil {
		return x.Load5
	}
	return 0
}

func (x *MonitorTick) GetLoad15() float64 {
	if x != nil {
		return x.Load15
	}
	return 0
}

var File_protos_monitor_proto protoreflect.FileDescriptor

var file_protos_monitor_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x11,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9d, 0x04, 0x0a, 0x0b, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x63,
	0x6b, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x70, 0x75, 0x4c,
	0x6f, 0x61, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x63, 0x70,
	0x75, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x63,
	0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77,
	0x61, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73,
	0x77, 0x61, 0x70, 0x55, 0x73, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x5f, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x6e, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6e,
	0x65, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x63, 0x76, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x63, 0x76, 0x12,
	0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x6e, 0x74,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x72, 0x63, 0x76, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x63, 0x76, 0x12, 0x31, 0x0a, 0x15, 0x6e, 0x65, 0x74, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x6e, 0x74,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6e, 0x65,
	0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f,
	0x72, 0x63, 0x76, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x63, 0x76, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x18, 0x29, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x6f,
	0x61, 0x64, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x35, 0x18, 0x2a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x61,
	0x64, 0x31, 0x35, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x31,
	0x35, 0x32, 0x8a, 0x01, 0x0a, 0x0e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a,
	0x13, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x22, 0x00, 0x28, 0x01, 0x42, 0x0c,
	0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x62, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_monitor_proto_rawDescOnce sync.Once
	file_protos_monitor_proto_rawDescData = file_protos_monitor_proto_rawDesc
)

func file_protos_monitor_proto_rawDescGZIP() []byte {
	file_protos_monitor_proto_rawDescOnce.Do(func() {
		file_protos_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_monitor_proto_rawDescData)
	})
	return file_protos_monitor_proto_rawDescData
}

var file_protos_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_protos_monitor_proto_goTypes = []interface{}{
	(*MonitorTick)(nil), // 0: protos.MonitorTick
	(*Receipt)(nil),     // 1: protos.Receipt
}
var file_protos_monitor_proto_depIdxs = []int32{
	0, // 0: protos.MonitorService.ReportMonitor:input_type -> protos.MonitorTick
	0, // 1: protos.MonitorService.ReportMonitorStream:input_type -> protos.MonitorTick
	1, // 2: protos.MonitorService.ReportMonitor:output_type -> protos.Receipt
	1, // 3: protos.MonitorService.ReportMonitorStream:output_type -> protos.Receipt
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_monitor_proto_init() }
func file_protos_monitor_proto_init() {
	if File_protos_monitor_proto != nil {
		return
	}
	file_protos_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_monitor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorTick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_monitor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_monitor_proto_goTypes,
		DependencyIndexes: file_protos_monitor_proto_depIdxs,
		MessageInfos:      file_protos_monitor_proto_msgTypes,
	}.Build()
	File_protos_monitor_proto = out.File
	file_protos_monitor_proto_rawDesc = nil
	file_protos_monitor_proto_goTypes = nil
	file_protos_monitor_proto_depIdxs = nil
}
