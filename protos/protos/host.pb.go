// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: protos/host.proto

package pb_model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TotalSize int64  `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`   // kb
	InUseSize int64  `protobuf:"varint,4,opt,name=in_use_size,json=inUseSize,proto3" json:"in_use_size,omitempty"` // kb
}

func (x *DiskInfo) Reset() {
	*x = DiskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_host_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskInfo) ProtoMessage() {}

func (x *DiskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_host_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskInfo.ProtoReflect.Descriptor instead.
func (*DiskInfo) Descriptor() ([]byte, []int) {
	return file_protos_host_proto_rawDescGZIP(), []int{0}
}

func (x *DiskInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DiskInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiskInfo) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *DiskInfo) GetInUseSize() int64 {
	if x != nil {
		return x.InUseSize
	}
	return 0
}

type GpuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Model     string            `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Name      string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ExtraInfo map[string]string `protobuf:"bytes,4,rep,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GpuInfo) Reset() {
	*x = GpuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_host_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuInfo) ProtoMessage() {}

func (x *GpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_host_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuInfo.ProtoReflect.Descriptor instead.
func (*GpuInfo) Descriptor() ([]byte, []int) {
	return file_protos_host_proto_rawDescGZIP(), []int{1}
}

func (x *GpuInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GpuInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GpuInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GpuInfo) GetExtraInfo() map[string]string {
	if x != nil {
		return x.ExtraInfo
	}
	return nil
}

// 定时上报主机信息 freq: 1day
type HostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId     int64       `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	HostName     string      `protobuf:"bytes,2,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Os           string      `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"` // /mac/android/ios/linux
	OsVersion    string      `protobuf:"bytes,4,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	CpuName      string      `protobuf:"bytes,11,opt,name=cpu_name,json=cpuName,proto3" json:"cpu_name,omitempty"`                  //  cpu型号（不一定有）
	CpuMaxFreq   string      `protobuf:"bytes,12,opt,name=cpu_max_freq,json=cpuMaxFreq,proto3" json:"cpu_max_freq,omitempty"`       //  cpu频率，MHz（不一定有）
	CpuCoreCount string      `protobuf:"bytes,13,opt,name=cpu_core_count,json=cpuCoreCount,proto3" json:"cpu_core_count,omitempty"` //  cpu核心数（不一定有）
	RamTotal     string      `protobuf:"bytes,21,opt,name=ram_total,json=ramTotal,proto3" json:"ram_total,omitempty"`
	RamFreq      string      `protobuf:"bytes,22,opt,name=ram_freq,json=ramFreq,proto3" json:"ram_freq,omitempty"`
	SwapTotal    string      `protobuf:"bytes,23,opt,name=swap_total,json=swapTotal,proto3" json:"swap_total,omitempty"`
	DiskInfos    []*DiskInfo `protobuf:"bytes,31,rep,name=disk_infos,json=diskInfos,proto3" json:"disk_infos,omitempty"`
	GpuInfos     []*GpuInfo  `protobuf:"bytes,32,rep,name=gpu_infos,json=gpuInfos,proto3" json:"gpu_infos,omitempty"`
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_host_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_host_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_protos_host_proto_rawDescGZIP(), []int{2}
}

func (x *HostInfo) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *HostInfo) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *HostInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *HostInfo) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *HostInfo) GetCpuName() string {
	if x != nil {
		return x.CpuName
	}
	return ""
}

func (x *HostInfo) GetCpuMaxFreq() string {
	if x != nil {
		return x.CpuMaxFreq
	}
	return ""
}

func (x *HostInfo) GetCpuCoreCount() string {
	if x != nil {
		return x.CpuCoreCount
	}
	return ""
}

func (x *HostInfo) GetRamTotal() string {
	if x != nil {
		return x.RamTotal
	}
	return ""
}

func (x *HostInfo) GetRamFreq() string {
	if x != nil {
		return x.RamFreq
	}
	return ""
}

func (x *HostInfo) GetSwapTotal() string {
	if x != nil {
		return x.SwapTotal
	}
	return ""
}

func (x *HostInfo) GetDiskInfos() []*DiskInfo {
	if x != nil {
		return x.DiskInfos
	}
	return nil
}

func (x *HostInfo) GetGpuInfos() []*GpuInfo {
	if x != nil {
		return x.GpuInfos
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_host_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_protos_host_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_protos_host_proto_rawDescGZIP(), []int{3}
}

type PerformanceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpV4         string `protobuf:"bytes,10,opt,name=ip_v4,json=ipV4,proto3" json:"ip_v4,omitempty"`
	IpV6         string `protobuf:"bytes,11,opt,name=ip_v6,json=ipV6,proto3" json:"ip_v6,omitempty"`
	RamTotal     string `protobuf:"bytes,21,opt,name=ram_total,json=ramTotal,proto3" json:"ram_total,omitempty"`    // in kb
	RamInUse     string `protobuf:"bytes,22,opt,name=ram_in_use,json=ramInUse,proto3" json:"ram_in_use,omitempty"`  // in kb
	RamCached    string `protobuf:"bytes,23,opt,name=ram_cached,json=ramCached,proto3" json:"ram_cached,omitempty"` // in kb
	RamFree      string `protobuf:"bytes,24,opt,name=ram_free,json=ramFree,proto3" json:"ram_free,omitempty"`       // in kb
	RamSwapTotal string `protobuf:"bytes,25,opt,name=ram_swap_total,json=ramSwapTotal,proto3" json:"ram_swap_total,omitempty"`
	RamSwapInUse string `protobuf:"bytes,26,opt,name=ram_swap_in_use,json=ramSwapInUse,proto3" json:"ram_swap_in_use,omitempty"`
}

func (x *PerformanceData) Reset() {
	*x = PerformanceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_host_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceData) ProtoMessage() {}

func (x *PerformanceData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_host_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceData.ProtoReflect.Descriptor instead.
func (*PerformanceData) Descriptor() ([]byte, []int) {
	return file_protos_host_proto_rawDescGZIP(), []int{4}
}

func (x *PerformanceData) GetIpV4() string {
	if x != nil {
		return x.IpV4
	}
	return ""
}

func (x *PerformanceData) GetIpV6() string {
	if x != nil {
		return x.IpV6
	}
	return ""
}

func (x *PerformanceData) GetRamTotal() string {
	if x != nil {
		return x.RamTotal
	}
	return ""
}

func (x *PerformanceData) GetRamInUse() string {
	if x != nil {
		return x.RamInUse
	}
	return ""
}

func (x *PerformanceData) GetRamCached() string {
	if x != nil {
		return x.RamCached
	}
	return ""
}

func (x *PerformanceData) GetRamFree() string {
	if x != nil {
		return x.RamFree
	}
	return ""
}

func (x *PerformanceData) GetRamSwapTotal() string {
	if x != nil {
		return x.RamSwapTotal
	}
	return ""
}

func (x *PerformanceData) GetRamSwapInUse() string {
	if x != nil {
		return x.RamSwapInUse
	}
	return ""
}

var File_protos_host_proto protoreflect.FileDescriptor

var file_protos_host_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x11, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d,
	0x0a, 0x08, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a,
	0x0b, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xc0, 0x01,
	0x0a, 0x07, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x3c, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x8c, 0x03, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x70, 0x75, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x70, 0x75, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x72, 0x65,
	0x71, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x4d, 0x61, 0x78, 0x46,
	0x72, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x70, 0x75,
	0x43, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6d,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61,
	0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x6d, 0x5f, 0x66, 0x72,
	0x65, 0x71, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x6d, 0x46, 0x72, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x77, 0x61, 0x70, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2f, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x1f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x69,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x2c, 0x0a, 0x09, 0x67, 0x70, 0x75, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x20,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x70,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x67, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x08, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0xfd, 0x01, 0x0a, 0x0f, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x13, 0x0a,
	0x05, 0x69, 0x70, 0x5f, 0x76, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70,
	0x56, 0x34, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x70, 0x5f, 0x76, 0x36, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x70, 0x56, 0x36, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6d, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x6d, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x0a, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x5f, 0x75,
	0x73, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x55,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6d, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x6d, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x6d, 0x46, 0x72, 0x65, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x72, 0x61, 0x6d, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x61, 0x6d, 0x53, 0x77, 0x61, 0x70, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0f, 0x72, 0x61, 0x6d, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x69,
	0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x61, 0x6d,
	0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x32, 0x85, 0x01, 0x0a, 0x0e, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x0e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x65, 0x72,
	0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x22,
	0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x62, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_host_proto_rawDescOnce sync.Once
	file_protos_host_proto_rawDescData = file_protos_host_proto_rawDesc
)

func file_protos_host_proto_rawDescGZIP() []byte {
	file_protos_host_proto_rawDescOnce.Do(func() {
		file_protos_host_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_host_proto_rawDescData)
	})
	return file_protos_host_proto_rawDescData
}

var file_protos_host_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protos_host_proto_goTypes = []interface{}{
	(*DiskInfo)(nil),        // 0: protos.DiskInfo
	(*GpuInfo)(nil),         // 1: protos.GpuInfo
	(*HostInfo)(nil),        // 2: protos.HostInfo
	(*Header)(nil),          // 3: protos.Header
	(*PerformanceData)(nil), // 4: protos.PerformanceData
	nil,                     // 5: protos.GpuInfo.ExtraInfoEntry
	(*Receipt)(nil),         // 6: protos.Receipt
}
var file_protos_host_proto_depIdxs = []int32{
	5, // 0: protos.GpuInfo.extra_info:type_name -> protos.GpuInfo.ExtraInfoEntry
	0, // 1: protos.HostInfo.disk_infos:type_name -> protos.DiskInfo
	1, // 2: protos.HostInfo.gpu_infos:type_name -> protos.GpuInfo
	2, // 3: protos.MonitorService.ReportHostInfo:input_type -> protos.HostInfo
	4, // 4: protos.MonitorService.ReportPerfInfo:input_type -> protos.PerformanceData
	6, // 5: protos.MonitorService.ReportHostInfo:output_type -> protos.Receipt
	6, // 6: protos.MonitorService.ReportPerfInfo:output_type -> protos.Receipt
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_protos_host_proto_init() }
func file_protos_host_proto_init() {
	if File_protos_host_proto != nil {
		return
	}
	file_protos_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_host_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_host_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_host_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_host_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_host_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_host_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_host_proto_goTypes,
		DependencyIndexes: file_protos_host_proto_depIdxs,
		MessageInfos:      file_protos_host_proto_msgTypes,
	}.Build()
	File_protos_host_proto = out.File
	file_protos_host_proto_rawDesc = nil
	file_protos_host_proto_goTypes = nil
	file_protos_host_proto_depIdxs = nil
}
